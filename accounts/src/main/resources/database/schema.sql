--DROP TABLE IF EXISTS users CASCADE;
--DROP TABLE IF EXISTS accounts CASCADE;
--DROP TABLE IF EXISTS log CASCADE;
--DROP TABLE IF EXISTS amount_blocks CASCADE;
--DROP TYPE currency CASCADE;
--DROP TYPE transaction_status CASCADE;
--DROP TYPE action_type CASCADE;

--CREATE TYPE currency AS ENUM ('RUB','USD','CNY');
--CREATE TYPE transaction_status AS ENUM ('STARTED', 'BLOCKING_REQUEST', 'BLOCKED', 'CASH_RECEIVED', 'DEPOSIT_PROCESSED',
-- 'CASH_WAS_GIVEN', 'SUCCESS', 'CANCEL', 'ERROR');
--CREATE TYPE action_type AS ENUM ('DEPOSIT','WITHDRAWAL','TRANSFER');

DO
'
DECLARE
BEGIN
    CREATE TYPE currency AS ENUM (''RUB'',''USD'',''CNY'');
EXCEPTION
    WHEN duplicate_object THEN null;
END;
' LANGUAGE PLPGSQL;

DO
'
DECLARE
BEGIN
    CREATE TYPE transaction_status AS ENUM (''STARTED'', ''BLOCKING_REQUEST'', ''BLOCKED'',
    ''CASH_RECEIVED'', ''DEPOSIT_PROCESSED'',''CASH_WAS_GIVEN'', ''SUCCESS'', ''CANCEL'', ''ERROR'');
EXCEPTION
    WHEN duplicate_object THEN null;
END;
' LANGUAGE PLPGSQL;

DO
'
DECLARE
BEGIN
    CREATE TYPE action_type AS ENUM (''DEPOSIT'',''WITHDRAWAL'',''TRANSFER'');
EXCEPTION
    WHEN duplicate_object THEN null;
END;
' LANGUAGE PLPGSQL;


CREATE TABLE IF NOT EXISTS users (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  full_name VARCHAR(256) NOT NULL,
  birth_day DATE NOT NULL,
  email VARCHAR(256) NOT NULL UNIQUE,
  username VARCHAR(256) NOT NULL UNIQUE,
  password VARCHAR(1000) NOT NULL,
  roles VARCHAR(256) NOT NULL,
  enabled BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS accounts (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  number VARCHAR(256) NOT NULL,
  balance NUMERIC(14,2) NOT NULL CHECK(balance>=0) DEFAULT 0,
  currency_string_code_iso4217 CURRENCY NOT NULL,
  user_id UUID NOT NULL REFERENCES users(id),
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP NOT NULL,
  is_active BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS log (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  transaction_id UUID NOT NULL,
  action ACTION_TYPE NOT NULL,
  status TRANSACTION_STATUS NOT NULL,
  from_account_id UUID,
  to_account_id UUID,
  amount_from NUMERIC(14,2),
  amount_to NUMERIC(14,2),
  created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS amount_blocks (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  blocking_transaction_id UUID NOT NULL,
  account_id UUID NOT NULL REFERENCES accounts(id),
  amount NUMERIC(14,2) CHECK(amount>=0) DEFAULT 0,
  is_active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP
);